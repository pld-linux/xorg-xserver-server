--- xorg-server-1.4.orig/debian/patches/08_exa_fix_exaFillRegionTiled_fallback.diff
+++ xorg-server-1.4/debian/patches/08_exa_fix_exaFillRegionTiled_fallback.diff
@@ -0,0 +1,20 @@
+commit aa11204d4a81de851155ae3f01d4c897263fd7b0
+Author: Michel Dänzer <michel@tungstengraphics.com>
+Date:   Tue Sep 25 19:51:29 2007 +0200
+
+    EXA: Punt on fallback case not handled correctly in exaFillRegionTiled.
+
+diff --git a/exa/exa_accel.c b/exa/exa_accel.c
+index cc383cc..acc5dbe 100644
+--- a/exa/exa_accel.c
++++ b/exa/exa_accel.c
+@@ -1223,7 +1223,8 @@ exaFillRegionTiled (DrawablePtr	pDrawable,
+     }
+ 
+ fallback:
+-    if (alu != GXcopy || planemask != FB_ALLONES)
++    if (alu != GXcopy || planemask != FB_ALLONES || pPatOrg->x != 0 ||
++	pPatOrg->y != 0)
+ 	return FALSE;
+     EXA_FALLBACK(("from %p to %p (%c,%c)\n", pTile, pDrawable,
+ 		  exaDrawableLocation(&pTile->drawable),
--- xorg-server-1.4.orig/debian/patches/11_exa_no_negative_tile_offsets.diff
+++ xorg-server-1.4/debian/patches/11_exa_no_negative_tile_offsets.diff
@@ -0,0 +1,32 @@
+commit e1ac9c0e7a6167f14cb7899e585eeae74bb5d55d
+Author: Michel Dänzer <michel@tungstengraphics.com>
+Date:   Thu Sep 27 13:08:41 2007 +0200
+
+    EXA: Make sure tile offsets passed to drivers are never negative.
+    
+    Thanks to Björn Steinbrink for pointing out the problem on IRC.
+
+diff --git a/exa/exa_accel.c b/exa/exa_accel.c
+index cc383cc..d19e3f4 100644
+--- a/exa/exa_accel.c
++++ b/exa/exa_accel.c
+@@ -1187,7 +1187,8 @@ exaFillRegionTiled (DrawablePtr	pDrawable,
+ 	    int dstY = pBox->y1;
+ 	    int tileY;
+ 
+-	    tileY = (dstY - pDrawable->y - pPatOrg->y) % tileHeight;
++	    modulus(dstY - pDrawable->y - pPatOrg->y, tileHeight, tileY);
++
+ 	    while (height > 0) {
+ 		int width = pBox->x2 - pBox->x1;
+ 		int dstX = pBox->x1;
+@@ -1198,7 +1199,8 @@ exaFillRegionTiled (DrawablePtr	pDrawable,
+ 		    h = height;
+ 		height -= h;
+ 
+-		tileX = (dstX - pDrawable->x - pPatOrg->x) % tileWidth;
++		modulus(dstX - pDrawable->x - pPatOrg->x, tileWidth, tileX);
++
+ 		while (width > 0) {
+ 		    int w = tileWidth - tileX;
+ 		    if (w > width)
